; Project Euler Problem 2
;
;   Each new term in the Fibonacci sequence is generated by adding the 
;   previous two terms. By starting with 1 and 2, the first 10 terms will be:
;       1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;   By considering the terms in the Fibonacci sequence whose values do not 
;   exceed four million, find the sum of the even-valued terms.
;
;   Answer: 4613732

;;--------------------------------------------------
;; Lazy infinite seq with take-while, filter, and 
;; reduce
;;  --Ran 1e6 times took 5189.39 msecs
;;--------------------------------------------------
(defn fib-seq []
  ((fn rfib [a b]
    (cons a (lazy-seq (rfib b (+ a b))))) 1 2))

(defn pe2-filter-reduce []
  (reduce + (filter even? (take-while #(< % 4e6) (fib-seq)))))
;;--------------------------------------------------

;;--------------------------------------------------
;; Tail recursive version 
;;  --Ran 1e6 times took 2087.755 msecs
;;--------------------------------------------------
(defn pe2-tail-call []
  (loop [a 1 b 2 sum 0]
    (if (> a 4e6)
      sum
      (recur b 
             (+ a b) 
             (if (even? a) (+ a sum) sum)))))
;;--------------------------------------------------

;;--------------------------------------------------
;; Seq comprehension version 
;;  --Ran 1e6 times and took 26836.264 msecs
;;--------------------------------------------------
(defn pe2-seq-comp []
  (reduce + 
          (for [i (take-while #(< % 4e6) (fib-seq)) 
                :when (even? i)] 
            i)))
;;--------------------------------------------------
